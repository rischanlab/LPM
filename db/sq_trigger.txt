create sequence kkn_mhs_seq 
start with 1 
increment by 1 
nomaxvalue; 


create sequence kkn_kelompok_seq 
start with 1 
increment by 1 
nomaxvalue; 

create sequence kkn_detail_kelompok_seq 
start with 1 
increment by 1 
nomaxvalue; 


create sequence kkn_ta_seq 
start with 1 
increment by 1 
nomaxvalue; 

create sequence kkn_periode_seq
start with 1 
increment by 1 
nomaxvalue; 

create sequence kkn_angkatan_seq
start with 1 
increment by 1 
nomaxvalue; 

create sequence kkn_dpl_seq
start with 1 
increment by 1 
nomaxvalue; 


create sequence kkn_admin_seq 
start with 1 
increment by 1 
nomaxvalue; 


create sequence kkn_matakuliah_seq 
start with 1 
increment by 1 
nomaxvalue; 


create sequence kkn_fak_seq 
start with 1 
increment by 1 
nomaxvalue; 







create or replace trigger kkn_mhs_trigger
before insert on KKN_MHS
for each row
begin
select kkn_mhs_seq.nextval into :new.NO from dual;
end;
/

create or replace trigger kkn_kelompok_trigger
before insert on KKN_KELOMPOK
for each row
begin
select kkn_kelompok_seq.nextval into :new.ID_KELOMPOK from dual;
end;
/

create or replace trigger kkn_detail_kelompok_trigger
before insert on KKN_DETAIL_KELOMPOK
for each row
begin
select kkn_detail_kelompok_seq.nextval into :new.ID_DETAIL_KELOMPOK from dual;
end;
/

create or replace trigger kkn_ta
before insert on KKN_TA
for each row
begin
select kkn_ta_seq.nextval into :new.ID_TA from dual;
end;
/

create or replace trigger kkn_periode
before insert on KKN_PERIODE
for each row
begin
select kkn_periode_seq.nextval into :new.ID_PERIODE from dual;
end;
/

create or replace trigger kkn_angkatan
before insert on KKN_ANGKATAN
for each row
begin
select kkn_angkatan_seq.nextval into :new.ID_ANGKATAN from dual;
end;
/

CREATE OR REPLACE TRIGGER kkn_peserta_after_delete
AFTER DELETE ON KKN_DETAIL_KELOMPOK 
FOR EACH ROW
BEGIN
UPDATE KKN_MHS SET SUDAH='2' WHERE NO=:old.NO;
END;
/

create or replace trigger kkn_dpl_trigger
before insert on KKN_DPL
for each row
begin
select kkn_dpl_seq.nextval into :new.ID_DOSEN from dual;
end;
/

create or replace trigger kkn_admin_trigger
before insert on KKN_ADMIN
for each row
begin
select kkn_admin_seq.nextval into :new.ID from dual;
end;
/

create or replace trigger kkn_matakuliah_trigger
before insert on KKN_MATAKULIAH
for each row
begin
select kkn_matakuliah_seq.nextval into :new.ID_MK from dual;
end;
/

create or replace trigger kkn_fak_trigger
before insert on KKN_FAK
for each row
begin
select kkn_fak_seq.nextval into :new.ID_FAK from dual;
end;
/

CREATE OR REPLACE TRIGGER kkn_periode_duplicate
before insert or update on KKN_PERIODE
FOR each ROW
declare
v_dup number;

begin
select count(ID_PERIODE) INTO v_dup from KKN_PERIODE where PERIODE=:NEW.PERIODE and ID_TA=:NEW.ID_TA;
if v_dup > 0 then Raise_Application_Error (-20100, 'This property already exists. The insert is cancelled.');
end if;
end;
/






CREATE OR REPLACE TRIGGER nilaihuruf
BEFORE INSERT OR UPDATE ON KKN_MHS
FOR EACH ROW
BEGIN
DECLARE @NO FLOAT
DECLARE @NILAI FLOAT
SELECT @NO=NO, @NILAI=NILAI FROM KKN_MHS
IF @NILAI >=60
UPDATE KKN_MHS SET NILAI_HURUF='A' WHERE KODE=@KODE
ELSE UPDATE KKN_MHS SET NILAI_HURUF='B' WHERE KODE=@KODE
END;
/